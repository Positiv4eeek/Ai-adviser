"""initial schema

Revision ID: 16a468e247f6
Revises: 
Create Date: 2025-08-08 22:06:06.736846

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '16a468e247f6'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_prompts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_ai_prompts_id'), 'ai_prompts', ['id'], unique=False)
    op.create_table('ai_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('system_prompt', sa.Text(), nullable=True),
    sa.Column('max_tokens', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('curricula',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('program_code', sa.String(), nullable=False),
    sa.Column('program_name', sa.String(), nullable=False),
    sa.Column('intake_year', sa.Integer(), nullable=False),
    sa.Column('language', sa.String(), nullable=True),
    sa.Column('total_credits', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('email_verifications',
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('student', 'admin', name='userrole'), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('email')
    )
    op.create_index(op.f('ix_email_verifications_code'), 'email_verifications', ['code'], unique=True)
    op.create_index(op.f('ix_email_verifications_email'), 'email_verifications', ['email'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('student', 'admin', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('courses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('curriculum_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('semester', sa.String(), nullable=False),
    sa.Column('block', sa.String(), nullable=False),
    sa.Column('discipline_code', sa.String(), nullable=False),
    sa.Column('discipline_name', sa.String(), nullable=False),
    sa.Column('discipline_type', sa.String(), nullable=False),
    sa.Column('credits', sa.Float(), nullable=False),
    sa.Column('contact_hours', sa.Float(), nullable=True),
    sa.Column('exam_type', sa.String(), nullable=True),
    sa.Column('prerequisite', sa.String(), nullable=True),
    sa.Column('module', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['curriculum_id'], ['curricula.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('electives',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('curriculum_id', sa.Integer(), nullable=False),
    sa.Column('group_name', sa.String(), nullable=False),
    sa.Column('block', sa.String(), nullable=False),
    sa.Column('discipline_code', sa.String(), nullable=False),
    sa.Column('discipline_name', sa.String(), nullable=False),
    sa.Column('discipline_type', sa.String(), nullable=False),
    sa.Column('credits', sa.Float(), nullable=False),
    sa.Column('contact_hours', sa.Float(), nullable=True),
    sa.Column('exam_type', sa.String(), nullable=True),
    sa.Column('prerequisite', sa.String(), nullable=True),
    sa.Column('module', sa.String(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['curriculum_id'], ['curricula.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recommendation_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('student_name', sa.String(), nullable=True),
    sa.Column('entry_year', sa.Integer(), nullable=True),
    sa.Column('gpa', sa.Float(), nullable=True),
    sa.Column('specialty', sa.String(), nullable=True),
    sa.Column('prompt_name', sa.String(), nullable=True),
    sa.Column('prompt_input', sa.Text(), nullable=True),
    sa.Column('response', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recommendation_logs_id'), 'recommendation_logs', ['id'], unique=False)
    op.create_table('transcripts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('student_id', sa.String(), nullable=False),
    sa.Column('parsed_at', sa.DateTime(), nullable=True),
    sa.Column('student_info', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transcripts_student_id'), 'transcripts', ['student_id'], unique=False)
    op.create_index(op.f('ix_transcripts_user_id'), 'transcripts', ['user_id'], unique=False)
    op.create_table('transcript_courses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('transcript_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.Integer(), nullable=False),
    sa.Column('course_name', sa.String(), nullable=False),
    sa.Column('credits', sa.Integer(), nullable=False),
    sa.Column('percent', sa.Float(), nullable=True),
    sa.Column('grade_letter', sa.String(), nullable=True),
    sa.Column('grade_point', sa.Float(), nullable=True),
    sa.Column('grade_traditional', sa.String(), nullable=True),
    sa.Column('is_retake', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['transcript_id'], ['transcripts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transcript_courses')
    op.drop_index(op.f('ix_transcripts_user_id'), table_name='transcripts')
    op.drop_index(op.f('ix_transcripts_student_id'), table_name='transcripts')
    op.drop_table('transcripts')
    op.drop_index(op.f('ix_recommendation_logs_id'), table_name='recommendation_logs')
    op.drop_table('recommendation_logs')
    op.drop_table('electives')
    op.drop_table('courses')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_email_verifications_email'), table_name='email_verifications')
    op.drop_index(op.f('ix_email_verifications_code'), table_name='email_verifications')
    op.drop_table('email_verifications')
    op.drop_table('curricula')
    op.drop_table('ai_settings')
    op.drop_index(op.f('ix_ai_prompts_id'), table_name='ai_prompts')
    op.drop_table('ai_prompts')
    # ### end Alembic commands ###
